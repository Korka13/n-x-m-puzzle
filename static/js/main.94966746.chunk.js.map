{"version":3,"sources":["Board/Cell.js","Button.js","Board/Board.js","Home.js","FreePlay.js","Levels.js","NavBar.js","Stat.js","Stats.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","animateCell","yIndex","xIndex","classes","ncols","counter","evenRows","oddRows","y","nrows","x","push","cell","includes","isMoving","concat","direction","react_default","a","createElement","className","onClick","Component","Button","parameter","action","children","Board","state","hasWon","board","createBoard","movingCell","singleMoves","multipleMoves","timerOn","timerStart","millisecondsPassed","timerTime","goToPreviousPage","startTimer","stopTimer","replayGame","goToNextLevel","handleKeyPress","document","addEventListener","prevProps","location","pathname","removeEventListener","rows","columns","sequence","i","getRows","getCols","boardValues","buildSequence","shuffle","shuffleSequence","row","splice","shuffledValues","randIdx","Math","floor","random","length","randCel","checkSolvability","blankRow","inversions","j","console","log","currentSequence","solution","playingMode","winGame","level","_this$millisecondsToH","millisecondsToHours","hours","minutes","seconds","centiseconds","gameStats","fullDate","Date","toJSON","table","resolutionTime","id","now","updateStats","apply","checkWinner","setState","emptyCell","forEach","_this2","JSON","parse","stringify","moveY","moveX","findEmptyCellCoordinates","prevState","setTimeout","moveCell","_this3","tblBoard","map","key","src_Board_Cell","e","which","keyCode","_this$findEmptyCellCo","preventDefault","_this4","timer","setInterval","milliseconds","_this4$millisecondsTo","clearInterval","slice","history","_this5","Number","makeTable","src_Button_0","Fragment","allLevels","defaultProps","withRouter","Home","FreePlay","handleNumberChange","handleCheckChange","goToGame","event","defineProperty","target","name","value","checked","htmlFor","onChange","column","type","Levels","goToLevel","resetProgress","resetCompletedLevels","makeAvailableLevels","levels","disabled","String","NavBar","goToPage","page","style","padding","border","Stats","deleteStat","toDateString","toLocaleTimeString","deleteAllStats","stats","stat","Stat","assign","Game","completedLevels","window","localStorage","getItem","numArrayList","numLevels","rowsRoutes","maxRows","columnsRoutes","maxColumns","updateCompeltedLevels","from","to","Array","_","arr","d","join","_ref","toConsumableArray","setItem","availableLevels","newStat","_ref2","statId","filter","_this6","src_NavBar_0","react_router","exact","path","component","render","src_FreePlay","src_Levels","makeAvailableRoutes","src_Board_Board","match","params","src_Stats","App","src_Game","Boolean","hostname","ReactDOM","react_router_dom","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94966746.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Cell.css';\n\nclass Cell extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick() {\n\t\tthis.props.animateCell(this.props.yIndex, this.props.xIndex);\n\t}\n\n\trender() {\n\t\tlet classes;\n\t\tif (this.props.ncols % 2 === 0) {\n\t\t\tlet counter = 1;\n\t\t\tlet evenRows = [];\n\t\t\tlet oddRows = [];\n\t\t\tfor (let y = 0; y < this.props.nrows; y++) {\n\t\t\t\tif (y % 2 === 0) {\n\t\t\t\t\tfor (let x = 0; x < this.props.ncols; x++) {\n\t\t\t\t\t\tevenRows.push(counter);\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let x = 0; x < this.props.ncols; x++) {\n\t\t\t\t\t\toddRows.push(counter);\n\t\t\t\t\t\tcounter++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclasses =\n\t\t\t\t\t'Cell' +\n\t\t\t\t\t(this.props.cell === null\n\t\t\t\t\t\t? ' Cell-empty'\n\t\t\t\t\t\t: evenRows.includes(this.props.cell) && this.props.cell % 2 === 0\n\t\t\t\t\t\t? ' Cell-even'\n\t\t\t\t\t\t: oddRows.includes(this.props.cell) && this.props.cell % 2 !== 0\n\t\t\t\t\t\t? ' Cell-even'\n\t\t\t\t\t\t: ' Cell-odd');\n\t\t\t}\n\t\t} else {\n\t\t\tclasses =\n\t\t\t\t'Cell' +\n\t\t\t\t(this.props.cell === null\n\t\t\t\t\t? ' Cell-empty'\n\t\t\t\t\t: this.props.cell % 2 === 0\n\t\t\t\t\t? ' Cell-even'\n\t\t\t\t\t: ' Cell-odd');\n\t\t}\n\n\t\tif (this.props.isMoving) {\n\t\t\tclasses += ` move-${this.props.direction}`;\n\t\t}\n\n\t\treturn (\n\t\t\t<td className={classes} onClick={this.handleClick}>\n\t\t\t\t{this.props.cell}\n\t\t\t</td>\n\t\t);\n\t}\n}\n\nexport default Cell;\n","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\thandleClick() {\r\n\t\tif (this.props.parameter) {\r\n\t\t\tthis.props.action(this.props.parameter);\r\n\t\t} else if (this.props.action) {\r\n\t\t\tthis.props.action();\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<button className=\"Button\" onClick={this.handleClick}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Cell from './Cell';\nimport Button from '../Button';\nimport './Board.css';\n\nclass Board extends Component {\n\tstatic defaultProps = {\n\t\trows: 4,\n\t\tcolumns: 4,\n\t\tshuffle: true\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasWon: false,\n\t\t\tboard: this.createBoard(),\n\t\t\tmovingCell: null,\n\t\t\tsingleMoves: 0,\n\t\t\tmultipleMoves: 0,\n\t\t\ttimerOn: false,\n\t\t\ttimerStart: 0,\n\t\t\tmillisecondsPassed: 0,\n\t\t\ttimerTime: '00 : 00 : 00 : 00'\n\t\t};\n\t\tthis.animateCell = this.animateCell.bind(this);\n\t\tthis.goToPreviousPage = this.goToPreviousPage.bind(this);\n\t\tthis.startTimer = this.startTimer.bind(this);\n\t\tthis.stopTimer = this.stopTimer.bind(this);\n\t\tthis.replayGame = this.replayGame.bind(this);\n\t\tthis.goToNextLevel = this.goToNextLevel.bind(this);\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.startTimer();\n\t\tdocument.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\n\t\t\tthis.replayGame();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.stopTimer();\n\t\tdocument.removeEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tgetRows() {\n\t\treturn this.props.rows > 1 ? this.props.rows : 2;\n\t}\n\tgetCols() {\n\t\treturn this.props.columns > 1 ? this.props.columns : 2;\n\t}\n\tbuildSequence() {\n\t\tlet sequence = [];\n\t\tfor (let i = 1; i < this.getRows() * this.getCols(); i++) {\n\t\t\tsequence.push(i);\n\t\t}\n\t\tsequence.push(null);\n\t\treturn sequence;\n\t}\n\n\tcreateBoard() {\n\t\tlet boardValues = this.buildSequence();\n\t\tif (this.props.shuffle) {\n\t\t\tboardValues = this.shuffleSequence(boardValues);\n\t\t}\n\t\tlet board = [];\n\t\tfor (let y = 0; y < this.getRows(); y++) {\n\t\t\tlet row = [];\n\t\t\tfor (let x = 0; x < this.getCols(); x++) {\n\t\t\t\tlet cell = boardValues.splice(0, 1)[0];\n\t\t\t\trow.push(cell);\n\t\t\t}\n\t\t\tboard.push(row);\n\t\t}\n\t\treturn board;\n\t}\n\n\tshuffleSequence(sequence) {\n\t\tlet shuffledValues = [];\n\t\tfor (let i = 0; i < this.getRows() * this.getCols(); i++) {\n\t\t\tlet randIdx = Math.floor(Math.random() * sequence.length);\n\t\t\tlet randCel = sequence.splice(randIdx, 1)[0];\n\t\t\tshuffledValues.push(randCel);\n\t\t}\n\t\tif (this.checkSolvability(shuffledValues)) {\n\t\t\treturn shuffledValues;\n\t\t} else {\n\t\t\treturn this.shuffleSequence(shuffledValues);\n\t\t}\n\t}\n\n\tcheckSolvability(sequence) {\n\t\tlet row = 0; // start calculation from 1st row\n\t\tlet blankRow; // define blank row\n\t\tlet inversions = 0; // start from 0 inversions\n\t\tfor (let i = 0; i < sequence.length; i++) {\n\t\t\tif (i % this.getCols() === 0) {\n\t\t\t\t// it means we are at the 1st cell of next row\n\t\t\t\trow++;\n\t\t\t}\n\t\t\tif (sequence[i] === null) {\n\t\t\t\tblankRow = row; //save y index of blank cell\n\t\t\t}\n\t\t\tfor (let j = i + 1; j < sequence.length; j++) {\n\t\t\t\t//evaluate i against all cells are following it in the sequence\n\t\t\t\tif (sequence[i] > sequence[j] && sequence[j] !== null) {\n\t\t\t\t\tinversions++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.getCols() % 2 === 0) {\n\t\t\t//even columns configuration\n\t\t\tif ((this.getRows() - blankRow) % 2 === 0) {\n\t\t\t\t// columns - blankrow is even?\n\t\t\t\tconsole.log(inversions % 2 === 0);\n\t\t\t\treturn inversions % 2 === 0;\n\t\t\t} else {\n\t\t\t\t// columns - blankrow is odd?\n\t\t\t\tconsole.log(inversions % 2 !== 0);\n\t\t\t\treturn inversions % 2 !== 0;\n\t\t\t}\n\t\t} else {\n\t\t\t// odd columns configuration\n\t\t\tconsole.log(inversions % 2 === 0);\n\t\t\treturn inversions % 2 === 0;\n\t\t}\n\t}\n\n\tcheckWinner(currentSequence) {\n\t\tconst solution = this.buildSequence();\n\t\tfor (let i = 0; i < solution.length; i++) {\n\t\t\tif (currentSequence[i] !== solution[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (this.props.playingMode === 'levels') {\n\t\t\tthis.props.winGame(this.props.level);\n\t\t}\n\t\tthis.stopTimer();\n\t\tconst { hours, minutes, seconds, centiseconds } = this.millisecondsToHours(\n\t\t\tthis.state.millisecondsPassed\n\t\t);\n\t\tconst gameStats = {\n\t\t\tfullDate: new Date().toJSON(),\n\t\t\ttable: `${this.getCols()} X ${this.getCols()} - ${\n\t\t\t\tthis.props.playingMode === 'levels'\n\t\t\t\t\t? `Level ${this.props.level}`\n\t\t\t\t\t: `Free Play - ${this.props.shuffle ? 'Shuffle' : 'Ordered'}`\n\t\t\t}`,\n\t\t\tsingleMoves: this.state.singleMoves,\n\t\t\tmultipleMoves: this.state.multipleMoves,\n\t\t\tresolutionTime: `${hours}hr : ${minutes}min : ${seconds}sec : ${centiseconds}cs`,\n\t\t\tid: Date.now()\n\t\t};\n\t\tthis.props.updateStats(gameStats);\n\n\t\treturn true;\n\t}\n\n\tmoveCell(board) {\n\t\tconst currentSequence = [].concat.apply([], board);\n\t\tconst hasWon = this.checkWinner(currentSequence);\n\t\tthis.setState({\n\t\t\tboard,\n\t\t\thasWon,\n\t\t\tmovingCell: null\n\t\t});\n\t}\n\n\tfindEmptyCellCoordinates() {\n\t\tconst emptyCell = { x: 0, y: 0 };\n\t\tthis.state.board.forEach((row, yIndex) => {\n\t\t\trow.forEach((cell, xIndex) => {\n\t\t\t\tif (cell === null) {\n\t\t\t\t\temptyCell.y = yIndex;\n\t\t\t\t\temptyCell.x = xIndex;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn emptyCell;\n\t}\n\n\tanimateCell(y, x) {\n\t\tif (!this.state.movingCell) {\n\t\t\tconst board = JSON.parse(JSON.stringify(this.state.board));\n\t\t\tlet direction;\n\t\t\tlet moveY = [y];\n\t\t\tlet moveX = [x];\n\t\t\tlet singleMoves = 0;\n\t\t\tlet multipleMoves = 0;\n\t\t\tconst emptyCell = this.findEmptyCellCoordinates();\n\t\t\tif (x === emptyCell.x) {\n\t\t\t\tif (y < emptyCell.y) {\n\t\t\t\t\tfor (let i = emptyCell.y; i > y; i--) {\n\t\t\t\t\t\tboard[i][x] = board[i - 1][x];\n\t\t\t\t\t\tmoveY.push(i - 1);\n\t\t\t\t\t\tdirection = 'down';\n\t\t\t\t\t\tsingleMoves++;\n\t\t\t\t\t}\n\t\t\t\t} else if (y > emptyCell.y) {\n\t\t\t\t\tfor (let i = emptyCell.y; i < y; i++) {\n\t\t\t\t\t\tboard[i][x] = board[i + 1][x];\n\t\t\t\t\t\tmoveY.push(i + 1);\n\t\t\t\t\t\tdirection = 'up';\n\t\t\t\t\t\tsingleMoves++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tboard[y][x] = null;\n\t\t\t\tmultipleMoves++;\n\t\t\t}\n\t\t\tif (y === emptyCell.y) {\n\t\t\t\tif (x < emptyCell.x) {\n\t\t\t\t\tfor (let i = emptyCell.x; i > x; i--) {\n\t\t\t\t\t\tboard[y][i] = board[y][i - 1];\n\t\t\t\t\t\tmoveX.push(i - 1);\n\t\t\t\t\t\tdirection = 'right';\n\t\t\t\t\t\tsingleMoves++;\n\t\t\t\t\t}\n\t\t\t\t} else if (x > emptyCell.x) {\n\t\t\t\t\tfor (let i = emptyCell.x; i < x; i++) {\n\t\t\t\t\t\tboard[y][i] = board[y][i + 1];\n\t\t\t\t\t\tmoveX.push(i + 1);\n\t\t\t\t\t\tdirection = 'left';\n\t\t\t\t\t\tsingleMoves++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tboard[y][x] = null;\n\t\t\t\tmultipleMoves++;\n\t\t\t}\n\t\t\tthis.setState(\n\t\t\t\tprevState => ({\n\t\t\t\t\tsingleMoves: prevState.singleMoves + singleMoves,\n\t\t\t\t\tmultipleMoves: prevState.multipleMoves + multipleMoves,\n\t\t\t\t\tmovingCell: { y: moveY, x: moveX, direction }\n\t\t\t\t}),\n\t\t\t\t() => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.moveCell(board);\n\t\t\t\t\t}, 200);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tmakeTable() {\n\t\tlet tblBoard = this.state.board.map((row, yIndex) => {\n\t\t\treturn (\n\t\t\t\t<tr key={yIndex}>\n\t\t\t\t\t{row.map((cell, xIndex) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\tkey={`${yIndex}-${xIndex}`}\n\t\t\t\t\t\t\t\tcell={cell}\n\t\t\t\t\t\t\t\tanimateCell={this.animateCell}\n\t\t\t\t\t\t\t\tyIndex={yIndex}\n\t\t\t\t\t\t\t\txIndex={xIndex}\n\t\t\t\t\t\t\t\tncols={this.getCols()}\n\t\t\t\t\t\t\t\tnrows={this.getRows()}\n\t\t\t\t\t\t\t\tisMoving={\n\t\t\t\t\t\t\t\t\tthis.state.movingCell &&\n\t\t\t\t\t\t\t\t\tthis.state.movingCell.y.includes(yIndex) &&\n\t\t\t\t\t\t\t\t\tthis.state.movingCell.x.includes(xIndex)\n\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t: false\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdirection={\n\t\t\t\t\t\t\t\t\tthis.state.movingCell &&\n\t\t\t\t\t\t\t\t\tthis.state.movingCell.y.includes(yIndex) &&\n\t\t\t\t\t\t\t\t\tthis.state.movingCell.x.includes(xIndex)\n\t\t\t\t\t\t\t\t\t\t? this.state.movingCell.direction\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<table className=\"Board\">\n\t\t\t\t<tbody>{tblBoard}</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n\n\thandleKeyPress(e) {\n\t\tconst key = 'which' in e ? e.which : e.keyCode;\n\t\tconst { x, y } = this.findEmptyCellCoordinates();\n\t\tif (key === 37 || key === 38 || key === 39 || key === 40) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (key === 37 && x + 1 < this.getCols()) {\n\t\t\tthis.animateCell(y, x + 1);\n\t\t}\n\t\tif (key === 38 && y + 1 < this.getRows()) {\n\t\t\tthis.animateCell(y + 1, x);\n\t\t}\n\t\tif (key === 39 && x - 1 >= 0) {\n\t\t\tthis.animateCell(y, x - 1);\n\t\t}\n\t\tif (key === 40 && y - 1 >= 0) {\n\t\t\tthis.animateCell(y - 1, x);\n\t\t}\n\t}\n\n\tstartTimer() {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttimerOn: true,\n\t\t\t\ttimerStart: Date.now() - this.state.millisecondsPassed\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.timer = setInterval(() => {\n\t\t\t\t\tconst milliseconds = Date.now() - this.state.timerStart;\n\t\t\t\t\tconst {\n\t\t\t\t\t\thours,\n\t\t\t\t\t\tminutes,\n\t\t\t\t\t\tseconds,\n\t\t\t\t\t\tcentiseconds\n\t\t\t\t\t} = this.millisecondsToHours(milliseconds);\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttimerTime: `${hours} : ${minutes} : ${seconds} : ${centiseconds}`,\n\t\t\t\t\t\tmillisecondsPassed: milliseconds\n\t\t\t\t\t});\n\t\t\t\t}, 10);\n\t\t\t}\n\t\t);\n\t}\n\n\tstopTimer() {\n\t\tthis.setState({ timerOn: false });\n\t\tclearInterval(this.timer);\n\t}\n\n\tmillisecondsToHours(milliseconds) {\n\t\tlet hours = ('0' + Math.floor(milliseconds / 3600000)).slice(-2);\n\t\tlet minutes = ('0' + (Math.floor(milliseconds / 60000) % 60)).slice(-2);\n\t\tlet seconds = ('0' + (Math.floor(milliseconds / 1000) % 60)).slice(-2);\n\t\tlet centiseconds = ('0' + (Math.floor(milliseconds / 10) % 100)).slice(-2);\n\n\t\treturn { hours, minutes, seconds, centiseconds };\n\t}\n\n\tgoToPreviousPage() {\n\t\tthis.props.history.push(`/${this.props.playingMode}`);\n\t}\n\n\treplayGame() {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tboard: this.createBoard(),\n\t\t\t\thasWon: false,\n\t\t\t\tsingleMoves: 0,\n\t\t\t\tmultipleMoves: 0,\n\t\t\t\ttimerStart: 0,\n\t\t\t\tmillisecondsPassed: 0,\n\t\t\t\ttimerTime: '00 : 00 : 00 : 00'\n\t\t\t},\n\t\t\t() => this.startTimer()\n\t\t);\n\t}\n\n\tgoToNextLevel() {\n\t\tthis.props.history.push(`/level/${1 + Number(this.props.level)}`);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.hasWon && <h1>YOU WIN!</h1>}\n\t\t\t\t{!this.state.hasWon && this.state.timerOn && (\n\t\t\t\t\t<div>{this.makeTable()}</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"Timer\">\n\t\t\t\t\t<div className=\"Timer-display\">{this.state.timerTime}</div>\n\t\t\t\t\t{this.state.timerOn && <Button action={this.stopTimer}>Pause</Button>}\n\t\t\t\t\t{!this.state.timerOn && !this.state.hasWon && (\n\t\t\t\t\t\t<Button action={this.startTimer}>Resume</Button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<h2>Single Moves: {this.state.singleMoves}</h2>\n\t\t\t\t<h2>Multiple Moves: {this.state.multipleMoves}</h2>\n\t\t\t\t{this.state.hasWon && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button action={this.goToPreviousPage}>\n\t\t\t\t\t\t\tBack to{' '}\n\t\t\t\t\t\t\t{this.props.playingMode === 'levels'\n\t\t\t\t\t\t\t\t? 'all Levels'\n\t\t\t\t\t\t\t\t: 'Free Play page'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button action={this.replayGame}>Replay</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{this.state.hasWon &&\n\t\t\t\t\tthis.props.playingMode === 'levels' &&\n\t\t\t\t\tNumber(this.props.level) !==\n\t\t\t\t\t\tNumber(this.props.allLevels[this.props.allLevels.length - 1]) && (\n\t\t\t\t\t\t<Button action={this.goToNextLevel}>Next Level</Button>\n\t\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Board);\n","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat\r\n\t\t\t\t\tinventore facere doloremque odit dignissimos autem quis quibusdam\r\n\t\t\t\t\taliquam aut suscipit ea nemo ipsa sapiente dolores, minus eaque\r\n\t\t\t\t\tvoluptates. Veritatis enim accusantium, sit eligendi sed vel deleniti\r\n\t\t\t\t\tmagnam corrupti quis delectus blanditiis velit deserunt ex corporis\r\n\t\t\t\t\tobcaecati qui, fugiat unde impedit!\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat\r\n\t\t\t\t\tinventore facere doloremque odit dignissimos autem quis quibusdam\r\n\t\t\t\t\taliquam aut suscipit ea nemo ipsa sapiente dolores, minus eaque\r\n\t\t\t\t\tvoluptates. Veritatis enim accusantium, sit eligendi sed vel deleniti\r\n\t\t\t\t\tmagnam corrupti quis delectus blanditiis velit deserunt ex corporis\r\n\t\t\t\t\tobcaecati qui, fugiat unde impedit!\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat\r\n\t\t\t\t\tinventore facere doloremque odit dignissimos autem quis quibusdam\r\n\t\t\t\t\taliquam aut suscipit ea nemo ipsa sapiente dolores, minus eaque\r\n\t\t\t\t\tvoluptates. Veritatis enim accusantium, sit eligendi sed vel deleniti\r\n\t\t\t\t\tmagnam corrupti quis delectus blanditiis velit deserunt ex corporis\r\n\t\t\t\t\tobcaecati qui, fugiat unde impedit!\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass FreePlay extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcolumns: 2,\r\n\t\t\trows: 2,\r\n\t\t\tshuffle: true\r\n\t\t};\r\n\t\tthis.handleNumberChange = this.handleNumberChange.bind(this);\r\n\t\tthis.handleCheckChange = this.handleCheckChange.bind(this);\r\n\t\tthis.goToGame = this.goToGame.bind(this);\r\n\t}\r\n\thandleNumberChange(event) {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t}\r\n\thandleCheckChange(event) {\r\n\t\tthis.setState({ shuffle: event.target.checked });\r\n\t}\r\n\tgoToGame() {\r\n\t\tthis.props.history.push(\r\n\t\t\t`/freeplay/${this.state.columns}/${this.state.rows}/${\r\n\t\t\t\tthis.state.shuffle ? 'shuffle' : 'ordered'\r\n\t\t\t}`\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Free Play</h1>\r\n\t\t\t\t<label htmlFor=\"columns\">Columns</label>\r\n\t\t\t\t<select\r\n\t\t\t\t\tname=\"columns\"\r\n\t\t\t\t\tid=\"columns\"\r\n\t\t\t\t\tonChange={this.handleNumberChange}\r\n\t\t\t\t\tvalue={this.state.columns}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.columns.map(column => (\r\n\t\t\t\t\t\t<option key={column} value={column}>\r\n\t\t\t\t\t\t\t{column}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<label htmlFor=\"rows\">Rows</label>\r\n\t\t\t\t<select\r\n\t\t\t\t\tname=\"rows\"\r\n\t\t\t\t\tid=\"rows\"\r\n\t\t\t\t\tonChange={this.handleNumberChange}\r\n\t\t\t\t\tvalue={this.state.rows}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.rows.map(row => (\r\n\t\t\t\t\t\t<option key={row} value={row}>\r\n\t\t\t\t\t\t\t{row}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t\t<label htmlFor=\"shuffle\">Shuffle</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname=\"shuffle\"\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tid=\"shuffle\"\r\n\t\t\t\t\tchecked={this.state.shuffle}\r\n\t\t\t\t\tonChange={this.handleCheckChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={this.goToGame}>Go!</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(FreePlay);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Levels extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.goToLevel = this.goToLevel.bind(this);\r\n\t\tthis.resetProgress = this.resetProgress.bind(this);\r\n\t}\r\n\r\n\tgoToLevel(level) {\r\n\t\tthis.props.history.push(`/level/${level}`);\r\n\t}\r\n\tresetProgress() {\r\n\t\tthis.props.resetCompletedLevels();\r\n\t\tthis.props.makeAvailableLevels();\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.levels.map(level => (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled={!this.props.makeAvailableLevels().includes(String(level))}\r\n\t\t\t\t\t\tkey={level}\r\n\t\t\t\t\t\tonClick={() => this.goToLevel(level)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLevel {level}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={this.resetProgress}>Reset Progress</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(Levels);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Button from './Button';\r\nimport './NavBar.css';\r\n\r\nclass NavBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.goToPage = this.goToPage.bind(this);\r\n\t}\r\n\tgoToPage(page) {\r\n\t\tthis.props.history.push(page);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"NavBar\">\r\n\t\t\t\t<div className=\"Title\">\r\n\t\t\t\t\t<h1>The Ultimate N x M Puzzle</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Button action={this.goToPage} parameter=\"/\">\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button action={this.goToPage} parameter=\"/freeplay\">\r\n\t\t\t\t\t\tFree Play\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button action={this.goToPage} parameter=\"/levels\">\r\n\t\t\t\t\t\tLevels\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button action={this.goToPage} parameter=\"/stats\">\r\n\t\t\t\t\t\tStats\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React, { Component } from 'react';\r\nimport Button from './Button';\r\n\r\nconst style = {\r\n\tpadding: '1rem',\r\n\tborder: '2px solid white'\r\n};\r\n\r\nclass Stats extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\thandleClick() {\r\n\t\tthis.props.deleteStat(this.props.id);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={style}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDate:\r\n\t\t\t\t\t{` ${new Date(this.props.fullDate).toDateString()} - ${new Date(\r\n\t\t\t\t\t\tthis.props.fullDate\r\n\t\t\t\t\t).toLocaleTimeString()}`}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>Table: {this.props.table}</p>\r\n\t\t\t\t<p>Single Moves: {this.props.singleMoves}</p>\r\n\t\t\t\t<p>Multiple Moves: {this.props.multipleMoves}</p>\r\n\t\t\t\t<p>Time: : {this.props.resolutionTime}</p>\r\n\t\t\t\t<Button action={this.handleClick}>Delete</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport Stat from './Stat';\r\nimport Button from './Button';\r\n\r\nclass Stats extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Button action={this.props.deleteAllStats}>\r\n\t\t\t\t\tDelete all the statistics\r\n\t\t\t\t</Button>\r\n\t\t\t\t{this.props.stats.map(stat => (\r\n\t\t\t\t\t<Stat key={stat.id} {...stat} deleteStat={this.props.deleteStat} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Board from './Board/Board';\r\nimport Home from './Home';\r\nimport FreePlay from './FreePlay';\r\nimport Levels from './Levels';\r\nimport NavBar from './NavBar';\r\nimport Stats from './Stats';\r\n\r\nclass Game extends Component {\r\n\tstatic defaultProps = {\r\n\t\tnumLevels: 17,\r\n\t\tmaxRows: 30,\r\n\t\tmaxColumns: 30\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcompletedLevels: JSON.parse(\r\n\t\t\t\twindow.localStorage.getItem('completedLevelsNXMPuzzle') || '[]'\r\n\t\t\t),\r\n\t\t\tstats: JSON.parse(window.localStorage.getItem('statsNXMPuzzle') || '[]')\r\n\t\t};\r\n\r\n\t\tthis.levels = this.numArrayList(1, this.props.numLevels);\r\n\t\tthis.rowsRoutes = this.numArrayList(2, this.props.maxRows);\r\n\t\tthis.columnsRoutes = this.numArrayList(2, this.props.maxColumns);\r\n\t\tthis.updateCompeltedLevels = this.updateCompeltedLevels.bind(this);\r\n\t\tthis.resetCompletedLevels = this.resetCompletedLevels.bind(this);\r\n\t\tthis.updateStats = this.updateStats.bind(this);\r\n\t\tthis.deleteAllStats = this.deleteAllStats.bind(this);\r\n\t\tthis.makeAvailableLevels = this.makeAvailableLevels.bind(this);\r\n\t\tthis.deleteStat = this.deleteStat.bind(this);\r\n\t}\r\n\r\n\tnumArrayList(from, to) {\r\n\t\treturn Array.from({ length: to - from + 1 }, (_, i) => from + i);\r\n\t}\r\n\r\n\tmakeAvailableRoutes(arr) {\r\n\t\treturn arr.map(d => d).join('|');\r\n\t}\r\n\r\n\tupdateCompeltedLevels(level) {\r\n\t\tif (!this.state.completedLevels.includes(level)) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t({ completedLevels }) => ({\r\n\t\t\t\t\tcompletedLevels: [...completedLevels, level]\r\n\t\t\t\t}),\r\n\t\t\t\t() =>\r\n\t\t\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t\t\t'completedLevelsNXMPuzzle',\r\n\t\t\t\t\t\tJSON.stringify(this.state.completedLevels)\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tresetCompletedLevels() {\r\n\t\tthis.setState({ completedLevels: [] }, () => {\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'completedLevelsNXMPuzzle',\r\n\t\t\t\tJSON.stringify(this.state.completedLevels)\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tmakeAvailableLevels() {\r\n\t\tlet availableLevels = Array.from(this.state.completedLevels);\r\n\t\tif (availableLevels.length === 0) {\r\n\t\t\tavailableLevels.push('1');\r\n\t\t} else if (availableLevels.length !== this.levels.length) {\r\n\t\t\tavailableLevels.push(\r\n\t\t\t\tString(\r\n\t\t\t\t\t1 +\r\n\t\t\t\t\t\tNumber(\r\n\t\t\t\t\t\t\tthis.state.completedLevels[this.state.completedLevels.length - 1]\r\n\t\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn availableLevels;\r\n\t}\r\n\r\n\tupdateStats(newStat) {\r\n\t\tthis.setState(\r\n\t\t\t({ stats }) => ({\r\n\t\t\t\tstats: [newStat, ...stats]\r\n\t\t\t}),\r\n\t\t\t() =>\r\n\t\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t\t'statsNXMPuzzle',\r\n\t\t\t\t\tJSON.stringify(this.state.stats)\r\n\t\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteStat(statId) {\r\n\t\tthis.setState({\r\n\t\t\tstats: this.state.stats.filter(stat => stat.id !== statId)\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteAllStats() {\r\n\t\tthis.setState({ stats: [] }, () => {\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'statsNXMPuzzle',\r\n\t\t\t\tJSON.stringify(this.state.stats)\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst getLevel = props => {\r\n\t\t\tlet i = 1;\r\n\t\t\tlet columns = 2;\r\n\t\t\tlet rows = 2;\r\n\t\t\twhile (i < props.match.params.level) {\r\n\t\t\t\ti % 2 === 0 ? columns++ : rows++;\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Board\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\trows={rows}\r\n\t\t\t\t\tplayingMode=\"levels\"\r\n\t\t\t\t\tlevel={props.match.params.level}\r\n\t\t\t\t\twinGame={this.updateCompeltedLevels}\r\n\t\t\t\t\tupdateStats={this.updateStats}\r\n\t\t\t\t\tallLevels={this.levels}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<div className=\"Game\">\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/freeplay\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<FreePlay rows={this.rowsRoutes} columns={this.columnsRoutes} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/levels\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<Levels\r\n\t\t\t\t\t\t\t\tlevels={this.levels}\r\n\t\t\t\t\t\t\t\tcompletedLevels={this.state.completedLevels}\r\n\t\t\t\t\t\t\t\tmakeAvailableLevels={this.makeAvailableLevels}\r\n\t\t\t\t\t\t\t\tresetCompletedLevels={this.resetCompletedLevels}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={`/freeplay/:columns(${this.makeAvailableRoutes(\r\n\t\t\t\t\t\t\tthis.columnsRoutes\r\n\t\t\t\t\t\t)})/:rows(${this.makeAvailableRoutes(\r\n\t\t\t\t\t\t\tthis.rowsRoutes\r\n\t\t\t\t\t\t)})/:shuffle(shuffle|ordered)`}\r\n\t\t\t\t\t\trender={props => (\r\n\t\t\t\t\t\t\t<Board\r\n\t\t\t\t\t\t\t\tcolumns={props.match.params.columns}\r\n\t\t\t\t\t\t\t\trows={props.match.params.rows}\r\n\t\t\t\t\t\t\t\tshuffle={\r\n\t\t\t\t\t\t\t\t\tprops.match.params.shuffle === 'shuffle' ? true : false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tplayingMode=\"freeplay\"\r\n\t\t\t\t\t\t\t\tupdateStats={this.updateStats}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={`/level/:level(${this.makeAvailableRoutes(\r\n\t\t\t\t\t\t\tthis.makeAvailableLevels()\r\n\t\t\t\t\t\t)})`}\r\n\t\t\t\t\t\trender={getLevel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath=\"/stats\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<Stats\r\n\t\t\t\t\t\t\t\tstats={this.state.stats}\r\n\t\t\t\t\t\t\t\tdeleteAllStats={this.deleteAllStats}\r\n\t\t\t\t\t\t\t\tdeleteStat={this.deleteStat}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route render={() => <h1>NOT FOUND</h1>} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Game from './Game';\nimport './App.css';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Game />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}